name: Build and Release

on:
  push:
    branches: [ release ]
    tags:
      - 'v*'
  pull_request:
    branches: [ release ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ steps.get_version.outputs.VERSION }} \
          --title "ID Card Maker ${{ steps.get_version.outputs.VERSION }}" \
          --notes "## ðŸ†• ID Card Maker Release ${{ steps.get_version.outputs.VERSION }}
          
          Professional bulk ID card printing solution with improved UI and features.
          
          ### ðŸŽ¯ Features:
          - **Smart Card Detection**: Automatic ID card boundary detection
          - **Manual Crop Editor**: Precise manual cropping with auto-detection
          - **Professional Layout**: Optimized card placement on A4 pages
          - **Cutting Guides**: Configurable crop marks for precise cutting
          - **Dual-sided Support**: Front and back card printing with duplex support
          - **Multiple Formats**: Support for various image formats (JPEG, PNG, TIFF, etc.)
          
          ### ðŸ“¦ Downloads:
          - **Windows**: \`id-card-maker-windows.exe\` - Standalone executable for Windows
          - **macOS**: \`id-card-maker-macos.zip\` - Application bundle for macOS
          - **Linux**: \`id-card-maker-linux.tar.gz\` - Executable for Linux distributions
          
          ### ðŸš€ Quick Start:
          1. Download the appropriate file for your operating system
          2. Extract (if needed) and run the application
          3. Load your ID card images using the Browse buttons
          4. Adjust settings as needed (card dimensions, spacing, etc.)
          5. Click \"Generate PDF Files\" to create print-ready PDFs
          
          ### ðŸ’¡ Tips:
          - Use the crop editor for precise card boundary selection
          - Enable crop marks for easier cutting
          - For duplex printing, enable \"Rotate back images 180Â°\"
          
          ---
          
          **System Requirements:**
          - Windows 10/11, macOS 10.14+, or modern Linux distribution
          - No Python installation required - fully self-contained executables"

  build-windows:
    runs-on: windows-latest
    needs: [create-release]
    if: always() && (github.event_name == 'push' && (contains(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/release'))
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Windows executable
      run: |
        pyinstaller --clean --onefile --windowed --name "ID-Card-Maker" ^
          --icon=icon.ico ^
          --add-data "README.md;." ^
          --hidden-import=PIL._tkinter_finder ^
          --hidden-import=ttkbootstrap ^
          --collect-all ttkbootstrap ^
          id_card_maker.py
    
    - name: Create Windows package
      run: |
        mkdir package
        copy dist\ID-Card-Maker.exe package\
        copy README.md package\
        copy LICENSE package\ 2>nul || echo "No LICENSE file found"
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: id-card-maker-windows
        path: package/
    
    - name: Upload Windows Release Asset
      if: needs.create-release.result == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ needs.create-release.outputs.version }} \
          ./dist/ID-Card-Maker.exe#id-card-maker-windows.exe

  build-macos:
    runs-on: macos-latest
    needs: [create-release]
    if: always() && (github.event_name == 'push' && (contains(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/release'))
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build macOS executable
      run: |
        pyinstaller --clean --onefile --windowed --name "ID-Card-Maker" \
          --add-data "README.md:." \
          --hidden-import=PIL._tkinter_finder \
          --hidden-import=ttkbootstrap \
          --collect-all ttkbootstrap \
          id_card_maker.py
    
    - name: Create macOS app bundle
      run: |
        mkdir -p "ID Card Maker.app/Contents/MacOS"
        mkdir -p "ID Card Maker.app/Contents/Resources"
        cp dist/ID-Card-Maker "ID Card Maker.app/Contents/MacOS/"
        cp README.md "ID Card Maker.app/Contents/Resources/"
        [ -f LICENSE ] && cp LICENSE "ID Card Maker.app/Contents/Resources/" || true
        
        cat > "ID Card Maker.app/Contents/Info.plist" << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>CFBundleExecutable</key>
          <string>ID-Card-Maker</string>
          <key>CFBundleIdentifier</key>
          <string>com.idcardmaker.app</string>
          <key>CFBundleName</key>
          <string>ID Card Maker</string>
          <key>CFBundleVersion</key>
          <string>1.0</string>
          <key>CFBundleShortVersionString</key>
          <string>1.0</string>
          <key>CFBundlePackageType</key>
          <string>APPL</string>
        </dict>
        </plist>
        EOF
    
    - name: Create macOS package
      run: |
        zip -r id-card-maker-macos.zip "ID Card Maker.app"
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: id-card-maker-macos
        path: id-card-maker-macos.zip
    
    - name: Upload macOS Release Asset
      if: needs.create-release.result == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ needs.create-release.outputs.version }} \
          ./id-card-maker-macos.zip

  build-linux:
    runs-on: ubuntu-latest
    needs: [create-release]
    if: always() && (github.event_name == 'push' && (contains(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/release'))
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk python3-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Linux executable
      run: |
        pyinstaller --clean --onefile --name "id-card-maker" \
          --add-data "README.md:." \
          --hidden-import=PIL._tkinter_finder \
          --hidden-import=ttkbootstrap \
          --collect-all ttkbootstrap \
          id_card_maker.py
    
    - name: Create Linux package
      run: |
        mkdir package
        cp dist/id-card-maker package/
        cp README.md package/
        [ -f LICENSE ] && cp LICENSE package/ || true
        
        # Create a simple run script
        cat > package/run.sh << 'EOF'
        #!/bin/bash
        cd "$(dirname "$0")"
        ./id-card-maker
        EOF
        chmod +x package/run.sh
        chmod +x package/id-card-maker
        
        tar -czf id-card-maker-linux.tar.gz -C package .
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: id-card-maker-linux
        path: id-card-maker-linux.tar.gz
    
    - name: Upload Linux Release Asset
      if: needs.create-release.result == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ needs.create-release.outputs.version }} \
          ./id-card-maker-linux.tar.gz